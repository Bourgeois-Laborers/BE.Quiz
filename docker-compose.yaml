services:
  quiz_database:
    container_name: quiz_postgres
    image: postgres:16.1
    volumes:
      - quiz_database:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    ports:
      - 5432:5432
    networks:
      - quiz_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

  quiz_api:
    container_name: quiz_api
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    ports:
      - 3000:3000
    depends_on:
      - quiz_database
      - quiz_prometheus
    networks:
      - quiz_network

  quiz_redis:
    container_name: quiz_redis
    image: redis:7-alpine
    restart: always
    ports:
      - 6379:6379
    volumes:
      - quiz_cache:/data
    logging:
      driver: json-file
      options:
        max-size: 50m
    networks:
      - quiz_network

  quiz_prometheus:
    image: prom/prometheus
    container_name: quiz_prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - quiz_prometheus_data:/prometheus
    networks:
      - quiz_network

  quiz_grafana:
    image: grafana/grafana
    container_name: quiz_grafana
    env_file:
      - .env
    ports:
      - '3001:3000'
    volumes:
      - quiz_grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - quiz_network

volumes:
  quiz_database:
  quiz_cache:
  quiz_grafana_data:
  quiz_prometheus_data:

networks:
  quiz_network:
